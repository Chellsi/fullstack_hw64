extends ../layout

block content
  .auth-container
    .auth-card
      .auth-header
        h1.auth-title –í—Ö—ñ–¥
        p.auth-subtitle –£–≤—ñ–π–¥—ñ—Ç—å –¥–æ —Å–≤–æ–≥–æ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É
      
      .demo-credentials
        p.demo-title üîë –¢–µ—Å—Ç–æ–≤—ñ –æ–±–ª—ñ–∫–æ–≤—ñ –∑–∞–ø–∏—Å–∏:
        p 
          strong Admin: 
          | username: 
          code admin
          |, password: 
          code admin123
        p 
          strong User: 
          | username: 
          code user
          |, password: 
          code user123
      
      form#loginForm.auth-form
        .form-group
          label(for='username') –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
          input#username.form-control(type='text', name='username', required, placeholder='–í–≤–µ–¥—ñ—Ç—å —ñ–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
        
        .form-group
          label(for='password') –ü–∞—Ä–æ–ª—å
          input#password.form-control(type='password', name='password', required, placeholder='–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å')
        
        #errorMessage.alert.alert-danger(style='display: none;')
        
        button.btn.btn-primary.btn-block(type='submit') –£–≤—ñ–π—Ç–∏
      
      .auth-footer
        p –ù–µ–º–∞—î –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É? 
          a(href='/auth/register') –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è
  
  script.
    document.getElementById('loginForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const username = document.getElementById('username').value;
      const password = document.getElementById('password').value;
      const errorMessage = document.getElementById('errorMessage');
      
      try {
        const response = await fetch('/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ username, password })
        });
        
        const data = await response.json();
        
        if (data.success) {
          window.location.href = '/auth/profile';
        } else {
          errorMessage.textContent = data.message;
          errorMessage.style.display = 'block';
        }
      } catch (error) {
        errorMessage.textContent = '–ü–æ–º–∏–ª–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º';
        errorMessage.style.display = 'block';
      }
    });